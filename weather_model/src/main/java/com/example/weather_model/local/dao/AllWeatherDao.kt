package com.example.weather_model.local.dao

import androidx.lifecycle.LiveData
import androidx.room.*
import com.example.weather_model.model.AllWeather

@Dao
interface AllWeatherDao {
    // autogenerated id is false so only id is 0 so we replace the the current weather with new

    @Insert(onConflict = OnConflictStrategy.REPLACE)
    fun setAllWeather(response: AllWeather)

    @Query("SELECT * FROM all_weather WHERE id = :myId LIMIT 1")
    suspend fun findAllWeatherById(myId: Long): AllWeather

    @Query("SELECT * FROM all_weather LIMIT 1")
    suspend fun findAllWeather(): AllWeather

//    @Query("SELECT * FROM all_weather WHERE lat = :latitude AND lon = :longitude LIMIT 1")
//    suspend fun findAllWeatherByLatAndLon(latitude: Long, longitude: Long): AllWeather?

    @Insert(onConflict = OnConflictStrategy.IGNORE)
    suspend fun insert(vararg allWeather: AllWeather)

    @Update(onConflict = OnConflictStrategy.IGNORE)
    suspend fun update(allWeather: AllWeather)

    @Query("DELETE FROM all_weather")
    suspend fun deleteAll()

    @get:Query("SELECT * FROM all_weather ORDER BY lat ASC" )
    val allWeather: LiveData<List<AllWeather>>
}